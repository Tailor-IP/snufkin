{"version":3,"sources":["connection-utils.js","utils.js","columns.js","gantt-config.js","gantt.js","hocs.js","lightboxes/subComponents/progress.js","lightboxes/hooks.js","store.js","lightboxes/subComponents/cost-edit.js","lightboxes/subComponents/cost.js","lightboxes/subComponents/parents.js","lightboxes/subComponents/editable-title.js","lightboxes/subComponents/summary.js","lightboxes/subComponents/milestone-summary.js","lightboxes/buttons/closeButton.js","lightboxes/buttons/deleteButton.js","lightboxes/buttons/index.js","lightboxes/buttons/defaultButtonsForLightbox.js","lightboxes/index.js","lightboxes/taskDetails.js","lightboxes/folderDetails.js","lightboxes/milestoneDetails.js","controllers/zoom.js","controllers/undo.js","controllers/inlineEdit.js","controllers/fullScreen.js","Spinner.js","controllers/save.js","controllers/toolbar.js","App.js","serviceWorker.js","index.js"],"names":["sendMsg","msg","window","parent","postMessage","formatNumber","num","factor","Math","round","parseInt","toString","replace","formatFloat","fixed","fixedNum","parseFloat","toFixed","splitNum","split","formattedInteger","join","formatDuration","duration","formatString","years","months","days","trim","floor","daysInMonth","avg","n1","n2","getParents","task","item","parents","parentId","gantt","getTask","unshift","showTask","id","updateBranch","callback","concat","forEach","getSnapshot","tasksMap","$data","tasksStore","pull","tasks","fullOrder","flat","map","links","getLinks","sendSaveGanttMessage","JSON","stringify","type","snapshot","fieldsToAggregate","aggregateTaskCostFields","reduce","sum","field","deleteTask","children","Object","values","filter","parentIndex","findChildren","updateTask","isFolder","reductTaskCostFromParents","costEntries","entries","key","value","toLowerCase","includes","updated","onTaskMove","initial","updatedStartDate","diff","start_date","childrenMap","groupBy","_update","_id","childrenIds","link","target","childId","updateChildren","Date","valueOf","end_date","setEndDate","endDate","squash","initialTask","console","warn","newStartDate","newTask","newDuration","days_to_process","completeTask","updatedTask","progress","getFieldUpdater","updatedCost","initialCost","initialTaskCost","isNaN","message","costUpdaters","associateFee","unidentifiedFee","brokerageFee","officialFee","official_fee","attorneyFee","minCost","maxCost","updatedMinCost","updatedMaxCost","min_attorney_fee","max_attorney_fee","dateToString","date","toISOString","slice","year","month","day","extractCosts","assignment","keys","endsWith","costKeys","addTaskCostToFolder","folder","resetFolderCosts","getTaskByTime","e","zeroFolderCosts","getChildren","length","leaf","log","parentTask","onSave","defaultColumns","template","label","cost","inlineEditColumns","editor","map_to","min","setZoomConfig","location","hostname","zoomConfig","trigger","useKey","levels","name","scale_height","min_column_width","scales","unit","step","format","dateToStr","date_to_str","add","height","ext","zoom","init","setColumns","allowEdit","columns","pop","config","initGanttDateFormat","date_format","cfg","str_to_date","server_utc","templates","parse_date","grid_date_format","column","initLightboxButtons","editAllowed","attachEvent","buttons_left","buttons_right","locale","labels","gantt_cancel_btn","_getSection","edit","typesMap","view","project","milestone","mapTo","initLightbox","lightbox","sections","project_sections","milestone_sections","section_lightbox","taskDetails","milestoneDetails","folderDetails","epochStart","addTask","$new","index","title","text","showLightbox","removeDefaultKeyShortcuts","setPlugins","plugins","undo","keyboard_navigation","fullscreen","marker","undo_steps","order_branch","portal","Component","elementId","props","element","document","getElementById","ReactDOM","createPortal","ProgressDetails","className","percent","width","useEdit","editIcon","icon","faPen","saveIcon","faCheck","useState","editing","setEditing","setIcon","onClick","useCallback","enterKeyHandle","preventDefault","stopPropagation","removeEventListener","size","selectedTaskState","atom","default","editable","undoStack","redoStack","noop","CostEdit","forwardRef","ref","onChange","formatter","parser","DisplayCost","actualCost","showIfEmpty","percentage","deviation","abs","sign","EditableCost","setCost","useRecoilState","selectedTask","selectTask","EditSwitch","inputRef","useRef","useEffect","current","focus","Cost","CostsTitle","costFields","CostComponent","total","isEditable","useRecoilValue","actualSum","bind","Parents","onTaskClick","hideLightbox","Item","DisplayTitle","EditableTitle","useSetRecoilState","setValue","Switch","defaultValue","onPressEnter","Title","Summary","MilestoneSummary","startDate","toUTCString","splice","faFlagCheckered","CloseButton","selected","setSelectedTask","$source","$target","DeleteButton","confirm","ok","cancel","confirmed","danger","LightboxButtons","Close","Delete","Default","viewComponents","canZoomOut","levelsCount","_levels","getCurrentLevel","canZoomIn","Zoom","zoomInAvailable","setZoomInAvailable","zoomOutAvailable","setZoomOutAvailable","disabled","zoomIn","faPlus","zoomOut","faMinus","UndoRedo","undoStackLength","setUndo","redoStackLength","setRedo","onUndo","getUndoStack","getRedoStack","faUndo","redo","onRedo","faRedo","handleInlineEditing","columnName","oldValue","newValue","updater","updatedDuration","types","subscribeToInlineEditing","inlineEditors","state","InlineEdit","checkedChildren","unCheckedChildren","checked","setTimeout","detachAllEvents","keyboard_navigation_cells","resetLayout","FullScreen","a","rootDiv","clientHeight","innerHeight","exitFullscreen","requestFullscreen","faExpandAlt","Spinner","indicator","LoadingOutlined","spin","style","fontSize","Save","loading","setLoading","faSave","Toolbar","_Toolbar","Gantt","data","setUndoStack","initialized","setInitialized","undoInit","setUndoInit","lastShown","setLastShown","action","stack","taskId","mode","clearAll","initConfig","setLevel","parse","addMarker","css","select","$open","idx","Snufkin","receipts","setData","receiptAssignments","setAssignments","setEditPermissions","_editable","onmessage","event","clearUndoStack","clearRedoStack","assignments","payload","actualCostsMap","costsSum","updateTaskCostsFromReceipts","Boolean","match","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.29f935d3.chunk.js","sourcesContent":["export function sendMsg(msg) {\n  window.parent.postMessage(msg, \"*\");\n}\n\n//export\n//window.onmessage = (event) => {\n//                let data = event.data;\n//                try {\n//                    data = JSON.parse(event.data);\n//                } catch(e) {\n//                    console.log(\"can't parse data: \" + event.data);\n//                }\n//                if(data && data.type) {\n//                    if (data.type === 'fetch') {\n//                        fetchData(data.id);\n//                    }\n//                    if (data.type === 'data') {\n//                       parseData(data.data);\n//                    }\n//                    if (data.type === 'update') {\n//                        updateGantt().then(function() {\n//                        sendMsg('saved');\n//                        });\n//                    }\n//                }\n//            }","import groupBy from 'lodash/groupBy';\nimport {sendMsg} from './connection-utils';\n\nconst dayInEpoch = 1000 * 60 * 60 * 24;\n\nexport function formatNumber(num) {\n    const factor = num > 1000 ? 100 : 10;\n    return Math.round((parseInt(num, 10)/factor) * factor).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport function formatFloat(num, fixed = 0) {\n    const fixedNum = fixed > 0 ? parseFloat(num).toFixed(fixed) : Math.round(num);\n    const splitNum = fixedNum.toString().split('.');\n    const formattedInteger = splitNum[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\n    return fixed > 0 ? [formattedInteger, splitNum[1]].join('.') : formattedInteger;\n}\n\nexport function formatDuration(duration) {\n    const daysInMonth = 30.4368499; // according to google\n    const daysInYear = daysInMonth * 12;\n\n    function formatString(years, months, days) {\n        return ((years ? years  + \" years\" : '') + (months ? ' ' + months + ' months' : '') + (days ? ' ' +days + ' days' : '')).trim();\n    }\n\n    if (duration > 36 * daysInMonth) {\n        const years = Math.floor(duration / daysInYear);\n        const months = Math.floor((duration - (years * daysInYear)) / daysInMonth);\n        const days = Math.round(duration - (years * daysInYear) - (months * daysInMonth));\n        return formatString(years, months, days);\n    }\n\n    if (duration > 61) {\n        const months = Math.floor(duration / daysInMonth);\n        const days = Math.round(duration - months * daysInMonth);\n        return formatString(0, months, days);\n    }\n\n    return formatString(0,0,duration);\n}\n\nexport function getCostString(minCost, maxCost, officialFee) {\n    return \"~ \" + formatNumber((parseFloat(minCost) + parseFloat(maxCost))/2 + parseFloat(officialFee)) + '$';\n}\n\nexport const avg = (n1, n2) => ((parseFloat(n1) + parseFloat(n2)) / 2).toFixed(2);\n\nexport const getParents = (task) => {\n    const parents = [];\n    let parentId = task.parent;\n    let item;\n    while (parentId) {\n        item = window.gantt.getTask(parentId);\n        parents.unshift(item);\n        parentId = item.parent;\n    }\n    return parents;\n}\n\nexport const showTask = (id) => {\n    window.gantt.showTask(id);\n}\n\nexport const updateBranch = (task, callback) => {\n    const branch = [task].concat(getParents(task))\n    branch.forEach(callback);\n}\n\nexport const getSnapshot = () => {\n            const tasksMap = window.gantt.$data.tasksStore.pull;\n            const tasksOrder = window.gantt.$data.tasksStore.fullOrder.flat();\n            const tasks = tasksOrder.map(id => tasksMap[id]);\n            const links = window.gantt.getLinks();\n            return {tasks, links}\n}\n\nexport const sendSaveGanttMessage = () => {\n    sendMsg(JSON.stringify({type: 'snapshot', snapshot: getSnapshot()}));\n}\n\nconst fieldsToAggregate = [\n    'officialFee',\n    'associateFee',\n    'unidentifiedFee',\n    'brokerageFee',\n]\n\nexport const aggregateTaskCostFields = (task) => {\n    return fieldsToAggregate.reduce((sum, field) => parseFloat(sum) + parseFloat(task[field] || 0) , 0);\n}\n\nexport const findChildren = (id) => Object.values(window.gantt.$data.tasksStore.pull).filter(task => task.parentIndex === id);\n\nexport const deleteTask = (id) => {\n    const task = window.gantt.getTask(id);\n    if (!task) return\n\n    const children = findChildren(id);\n    const parent = task.parent;\n\n    children.forEach(task => {\n        window.gantt.updateTask(task.id, {...task, parent})\n    });\n\n    if(!task.isFolder) {\n        reductTaskCostFromParents(task);\n    }\n\n    window.gantt.deleteTask(id);\n}\n\nconst reductTaskCostFromParents = (task) => {\n    const parents = getParents(task);\n    const costEntries = Object.entries(task).filter(([key, value]) => (key.toLowerCase().includes('fee') || key.includes('Cost')) && value);\n\n    parents.forEach(parent => {\n        const updated = {...parent};\n        costEntries.forEach(([key, value]) => {\n            updated[key] = updated[key] - value;\n        });\n        window.gantt.updateTask(parent.id, updated)\n    })\n}\n\nexport const updateChildren = (id, callback) => {\n    const childrenMap = groupBy(window.gantt.getLinks(), 'source');\n    const _update = (_id) => {\n        const links = childrenMap[_id];\n        if (!links) {\n            return\n        }\n\n        const childrenIds = links.map(link => link.target);\n        delete childrenMap[_id]; // to avoid infinite loop on circular links\n        childrenIds.forEach(childId => {\n            const task = window.gantt.getTask(childId)\n            callback(task);\n            _update(childId);\n        })\n    }\n    _update(id);\n}\n\nexport const onTaskMove = (initial, updatedStartDate) => {\n    const diff = updatedStartDate - initial.start_date;\n    updateChildren(initial.id, (task) => {\n        task.start_date = new Date(task.start_date.valueOf() + diff);\n        task.end_date = new Date(task.end_date.valueOf() + diff);\n        window.gantt.updateTask(task.id, task);\n    });\n}\n\nconst setEndDate = (id, endDate, squash = true) => {\n    const initialTask = window.gantt.$data.tasksStore.pull[id];\n    onTaskMove(initialTask, endDate);\n\n    if (initialTask.type === 'project') {\n        console.warn(\"that's a folder\", 'https://i.imgur.com/RUdPyQP.jpg');\n    }\n\n    const diff = endDate.valueOf() - initialTask.end_date.valueOf();\n    const newStartDate = initialTask.start_date.valueOf() + diff;\n\n    if (initialTask.type === 'milestone') {\n        const newTask = {...initialTask};\n        newTask.start_date = endDate;\n        window.gantt.updateTask(id, newTask);\n        return window.gantt.$data.tasksStore.pull[id];\n    }\n\n    if (squash) {\n        const newTask = {...initialTask};\n        let newDuration;\n\n        if (endDate.valueOf() <= initialTask.start_date.valueOf()) {\n            newDuration = 0;\n        }\n        else {\n            newDuration = Math.round((endDate.valueOf() - newStartDate) / dayInEpoch);\n        }\n\n        newTask.end_date = endDate;\n        if (newDuration <= 0) {\n            newTask.type = 'milestone';\n            newTask.duration = 0;\n            newTask.days_to_process = 0;\n            newTask.start_date = endDate;\n        } else {\n            newTask.duration = newDuration;\n        }\n\n        window.gantt.updateTask(id, newTask);\n\n        return window.gantt.$data.tasksStore.pull[id];\n    }\n}\n\nconst completeTask = (id, endDate) => {\n    const updatedTask = setEndDate(id, endDate);\n    updatedTask.progress = 1;\n    window.gantt.updateTask(id, updatedTask);\n    return updatedTask;\n}\n\nwindow.gantt.setEndDate = setEndDate;\nwindow.gantt.completeTask = completeTask;\nwindow.gantt.getSnapshot = getSnapshot;\n\nexport const getFieldUpdater = (field) => (initialTask, updatedCost) => {\n    const initialCost = initialTask[field] || 0;\n    const diff = parseFloat(updatedCost) - parseFloat(initialCost);\n        updateBranch(initialTask, (task) => {\n            const initialTaskCost = task[field] || 0;\n            let updatedCost = parseFloat(initialTaskCost) + parseFloat(diff);\n            if (isNaN(updatedCost)) {\n                window.gantt.message(`Failed to parse, resetting cost`);\n                updatedCost = 0;\n            }\n\n            const newTask = {...task,\n                [field]: updatedCost,\n            }\n            window.gantt.updateTask(task.id, newTask);\n        });\n    }\n\nexport const onOfficialFeeUpdate = (initialTask, updatedCost) => {\n    const diff = (updatedCost || 0) - (initialTask.officialFee || 0);\n    updateBranch(initialTask, (task) => {\n        let updatedCost = parseFloat(task.officialFee) + parseFloat(diff);\n\n        if (isNaN(updatedCost)) {\n            window.gantt.message(`Failed to parse, resetting cost`);\n            updatedCost = 0;\n        }\n\n        const newTask = {...task,\n            officialFee: updatedCost,\n            official_fee: updatedCost,\n        }\n        window.gantt.updateTask(task.id, newTask);\n    });\n}\n\nexport const onAttorneyFeeUpdate = (initialTask, updatedCost) => {\n    const diff = updatedCost - avg(initialTask.minCost, initialTask.maxCost);\n    updateBranch(initialTask, (task) => {\n        let updatedMinCost = parseFloat(task.minCost) + parseFloat(diff);\n        let updatedMaxCost = parseFloat(task.maxCost) + parseFloat(diff);\n\n        if (isNaN(updatedMinCost) || isNaN(updatedMaxCost)) {\n            window.gantt.message(`Failed to parse, resetting cost`);\n            updatedMinCost = 0;\n            updatedMaxCost = 0;\n        }\n\n        const newTask = {...task,\n            minCost: updatedMinCost,\n            min_attorney_fee: updatedMinCost,\n            maxCost: updatedMaxCost,\n            max_attorney_fee: updatedMaxCost\n        }\n        window.gantt.updateTask(task.id, newTask);\n    });\n}\n\nexport const costUpdaters = {\n    associateFee: getFieldUpdater('associateFee'),\n    unidentifiedFee: getFieldUpdater('unidentifiedFee'),\n    brokerageFee: getFieldUpdater('brokerageFee'),\n    officialFee: onOfficialFeeUpdate,\n    attorneyFee: onAttorneyFeeUpdate,\n}\n\nexport const onDurationChange = (initialTask, updatedDuration) => {\n    if (updatedDuration === 0) {\n        initialTask.type = window.gantt.config.types.milestone;\n    } else {\n        initialTask.type = window.gantt.config.types.task;\n    }\n    window.gantt.updateTask(initialTask.id, initialTask);\n}\n\nexport const dateToString = (date) => {\n    const [year, month, day] = date.toISOString().slice(0, 10).split('-');\n    return `${day}/${month}/${year}`;\n}\n\nconst extractCosts = (assignment) => {\n    const feeKeys = Object.keys(assignment).filter(key => key.endsWith('Fee'));\n    return feeKeys.map(key => ({key, value: assignment[key]}));\n}\n\nexport const updateTaskCostsFromReceipts = (assignments) => {\n    if (!assignments) return;\n//    const assignments = receipts.assignments\n    const tasks = Object.values(window.gantt.$data.tasksStore.pull);\n    const actualCostsMap = groupBy(assignments, 'taskId');\n    tasks.forEach(task => {\n        if (task.actualCost) {\n            const {actualCost, ...newTask} = task;\n            window.gantt.updateTask(task.id, newTask)\n        }\n\n        if (actualCostsMap[task.id]) {\n            const extractedCosts = actualCostsMap[task.id].map(extractCosts);\n            const costsSum = extractedCosts.flat().reduce((sum, cost) => {\n                sum[cost.key] = (sum[cost.key] || 0) + cost.value;\n                return sum\n            }, {})\n\n            const updatedTask = {...task, actualCost: costsSum};\n            window.gantt.updateTask(task.id, updatedTask)\n        }\n    })\n}\n\n\nconst costKeys = ['minCost', 'maxCost', 'attorneyFee', 'officialFee', 'associateFee', 'brokerageFee', 'unidentifiedFee'];\nconst zeroFolderCosts =  (folder) => {\n    costKeys.forEach(key => {\n        folder[key] = 0;\n      })\n  return folder;\n}\n\nconst addTaskCostToFolder = (folder, task) => {\n  costKeys.forEach(key => {\n    folder[key] = parseFloat(folder[key] || 0) + parseFloat(task[key] || 0)\n  })\n  return folder;\n}\n\nexport const resetFolderCosts = () => {\n    let folders = window.gantt.getTaskByTime().filter(e => {return e.type==='project'});\n    folders.forEach((folder)=> {\n        zeroFolderCosts(folder);\n        window.gantt.updateTask(folder.id, folder);\n    });\n    const leaves = window.gantt.getTaskByTime().filter((e) => {return !window.gantt.getChildren(e.id).length});\n\n    leaves.forEach((leaf) => {\n        let parentId = leaf.parent;\n        while (parentId) {\n            console.log(parentId)\n            let parentTask = window.gantt.getTask(parentId);\n            if(!parentTask){\n                break\n            }\n            addTaskCostToFolder(parentTask, leaf);\n            window.gantt.updateTask(parentTask.id, parentTask);\n            parentId = parentTask.parent;\n        }\n        \n    })\n}\n\n\n\nwindow.gantt.getSnapshot = getSnapshot;\nwindow.gantt.onSave = sendSaveGanttMessage;","import {formatDuration, formatNumber, avg, aggregateTaskCostFields} from './utils';\n\nexport const defaultColumns = [\n         {\n           \"name\": \"text\",\n           \"tree\": true,\n           \"width\": 156,\n           \"resize\": true\n         },\n         {\n           \"name\": \"start_date\",\n           \"align\": \"center\",\n           \"resize\": true,\n           \"width\": 90\n         },\n         {\n           \"name\": \"duration\",\n           \"align\": \"center\",\n           \"resize\": true,\n           \"width\": 90,\n           template: function (task) {\n               return formatDuration(task.duration);\n         }},\n           {\n           \"name\": \"totalCost\",\n           \"align\": \"center\",\n           label: \"Cost\",\n           \"width\": 90,\n           template: function (task) {\n               const cost = parseFloat(avg(task.minCost, task.maxCost)) + parseFloat(aggregateTaskCostFields(task))\n               return parseFloat(cost) > 0 ? formatNumber(cost) + '$' : '';\n         }},\n         {\n           \"name\": \"add\",\n           \"width\": 44,\n           \"min_width\": 44,\n           \"max_width\": 44\n         }\n       ];\n\n\nexport const inlineEditColumns = [\n         {\n           \"name\": \"text\",\n           \"tree\": true,\n           \"width\": 156,\n           \"resize\": true,\n           editor: {type: \"text\", map_to: \"text\"},\n         },\n         {\n           \"name\": \"start_date\",\n           \"align\": \"center\",\n           \"resize\": true,\n           \"width\": 90,\n           editor: {type: \"date\", map_to: \"start_date\"}\n          },\n         {\n           \"name\": \"duration\",\n           \"align\": \"center\",\n           \"resize\": true,\n           \"width\": 90,\n           editor: {type: \"number\", map_to: \"duration\", min:0},\n           template: function (task) {\n               return formatDuration(task.duration);\n           },\n         },\n          {\n              \"name\": \"attorneyFee\",\n              label: \"Attorney Fee\",\n              \"align\": \"center\",\n              \"resize\": true,\n              \"width\": 90,\n              template: function (task) {\n                     const cost = parseFloat(avg(task.minCost, task.maxCost))\n                     return formatNumber(cost);\n               },\n              editor: {type: \"number\", map_to: \"attorneyFee\", min:0},\n          },\n        {\n             \"name\": \"officialFee\",\n             label: \"Official Fee\",\n             \"align\": \"center\",\n             \"resize\": true,\n             \"width\": 90,\n             editor: {type: \"number\", map_to: \"officialFee\", min:0},\n         },\n          {\n            \"name\": \"associateFee\",\n            label: \"Associate Fee\",\n            \"align\": \"center\",\n            \"resize\": true,\n            \"width\": 90,\n            editor: {type: \"number\", map_to: \"associateFee\", min:0},\n            },\n         {\n           \"name\": \"brokerageFee\",\n           label: \"Brokerage Fee\",\n           \"align\": \"center\",\n           \"resize\": true,\n           \"width\": 90,\n           editor: {type: \"number\", map_to: \"brokerageFee\", min:0},\n           },\n          {\n           \"name\": \"unidentifiedFee\",\n           label: \"Unidentified Fee\",\n           \"align\": \"center\",\n           \"resize\": true,\n           \"width\": 90,\n           editor: {type: \"number\", map_to: \"unidentifiedFee\", min:0},\n           },\n           {\n           \"name\": \"totalCost\",\n           \"align\": \"center\",\n           label: \"Total Cost\",\n           \"width\": 90,\n           template: function (task) {\n               const cost = parseFloat(avg(task.minCost, task.maxCost)) + parseFloat(aggregateTaskCostFields(task))\n               return parseFloat(cost) > 0 ? formatNumber(cost) + '$' : '';\n         }},\n         {\n           \"name\": \"add\",\n           \"width\": 44,\n           \"min_width\": 44,\n           \"max_width\": 44,\n         }\n       ];","import {formatDuration, formatNumber, avg, aggregateTaskCostFields} from './utils';\nimport {defaultColumns} from './columns';\n\nconst lightboxHeight = 250;\nexport const API_URL = window.location.hostname === \"www.tailor-ip.com\" ? \"https://www.tailor-ip.com/_functions\" : \"https://www.tailor-ip.com/_functions-dev\";\n\nexport const setZoomConfig = (gantt) => {\n    const zoomConfig = {\n          trigger: 'wheel',\n          useKey: 'altKey',\n          levels: [\n            {\n              name:\"day\",\n              scale_height: 27,\n              min_column_width:80,\n              scales:[\n                  {unit: \"day\", step: 1, format: \"%d %M\"}\n              ]\n            },\n            {\n               name:\"week\",\n               scale_height: 50,\n               min_column_width:50,\n               scales:[\n                {unit: \"week\", step: 1, format: function (date) {\n                 var dateToStr = gantt.date.date_to_str(\"%d %M\");\n                 var endDate = gantt.date.add(date, -6, \"day\");\n                 var weekNum = gantt.date.date_to_str(\"%W\")(date);\n                 return \"#\" + weekNum + \", \" + dateToStr(date) + \" - \" + dateToStr(endDate);\n                 }},\n                 {unit: \"day\", step: 1, format: \"%j %D\"}\n               ]\n             },\n             {\n               name:\"month\",\n               scale_height: 50,\n               min_column_width:120,\n               scales:[\n                  {unit: \"month\", format: \"%F, %Y\"},\n                  {unit: \"week\", format: \"Week #%W\"}\n               ]\n              },\n              {\n               name:\"quarter\",\n               height: 50,\n               min_column_width:90,\n               scales:[\n                {unit: \"month\", step: 1, format: \"%M\"},\n                {\n                 unit: \"quarter\", step: 1, format: function (date) {\n                  var dateToStr = gantt.date.date_to_str(\"%M\");\n                  var endDate = gantt.date.add(gantt.date.add(date, 3, \"month\"), -1, \"day\");\n                  return dateToStr(date) + \" - \" + dateToStr(endDate);\n                 }\n               }\n              ]},\n              {\n                name:\"year\",\n                scale_height: 50,\n                min_column_width: 30,\n                scales:[\n                  {unit: \"year\", step: 1, format: \"%Y\"}\n              ]}\n          ]\n      }\n      gantt.ext.zoom.init(zoomConfig);\n  }\n\nconst setColumns = (gantt, allowEdit) => {\n    const columns = [].concat(defaultColumns);\n    if (!allowEdit) {\n        columns.pop();\n        }\n\n    gantt.config.columns = columns;\n }\n\nexport const initGanttDateFormat = (gantt) => {\n    gantt.config.date_format = \"%Y-%m-%d\";\n    gantt.config.date_format = \"%Y-%m-%d\";\n    const cfg = gantt.config;\n    const strToDate = gantt.date.str_to_date(cfg.date_format, cfg.server_utc);\n    gantt.templates.parse_date = (date = '') => {\n        return new Date(date);\n    }\n    gantt.templates.grid_date_format = (date, column) => gantt.date.date_to_str(\"%d/%m/%Y\")(date);\n}\n\nexport const initLightboxButtons = (gantt, editAllowed) => {\n    gantt.attachEvent(\"onGanttReady\", () => {\n          gantt.config.buttons_left = [];\n          gantt.config.buttons_right = [];\n          gantt.locale.labels.gantt_cancel_btn = \"Close\";\n    });\n}\n\nconst _getSection = (type, edit = false) => {\n    const typesMap = {\n        task: {\n            view: 'taskDetails',\n            edit: 'editTaskDetails',\n        },\n        project: {\n            view: 'folderDetails',\n            edit: 'editFolderDetails',\n        },\n        milestone: {\n            view: 'milestoneDetails',\n            edit: 'editMilestoneDetails',\n            height: 200,\n        },\n    }\n\n    const mapTo = typesMap[type];\n\n    const template = [{\n        \"name\": \"lightbox\",\n        \"height\": mapTo.height ? mapTo.height : lightboxHeight,\n        \"type\": \"template\",\n        \"map_to\": edit ? mapTo.edit : mapTo.view\n        }];\n\n    return template;\n}\n\nexport function initLightbox(gantt, editAllowed = false) {\n    gantt.config.lightbox.sections = _getSection('task', editAllowed);\n    gantt.config.lightbox.project_sections = _getSection('project', editAllowed)\n    gantt.config.lightbox.milestone_sections = _getSection('milestone', editAllowed)\n    gantt.locale.labels.section_lightbox = \"\";\n\n    gantt.attachEvent(\"onBeforeLightbox\", function(id) {\n        const task = gantt.getTask(id);\n        if (!task.taskDetails) {\n            task.taskDetails = \"<div id='task-details'/>\"\n            task.milestoneDetails = \"<div id='milestone-details' class='snufkin'/>\"\n            task.folderDetails = \"<div id='folder-details'/>\"\n        }\n        return task;\n    });\n\n    gantt.attachEvent(\"onTaskCreated\", function(newTask) {\n        const task = {...newTask}\n        task['$new'] = true;\n        task.epochStart = task.start_date.valueOf();\n        gantt.addTask(task)\n        return false;\n    })\n\n    gantt.attachEvent(\"onAfterTaskAdd\", function(id, task) {\n       if (!task.$new) return\n       task.index = task.id;\n       task.title = task.text;\n       task.minCost = 0;\n       task.maxCost = 0;\n       task['$source'] = [];\n       task.['$target'] = [];\n       task['$new'] = false;\n       gantt.showLightbox(id);\n//       setTimeout(() => gantt.showLightbox(id), 0)\n    });\n\n}\n\nconst removeDefaultKeyShortcuts = (gantt) => {\n    gantt.keys = {}\n}\n\nconst setPlugins = (gantt) => {\n    gantt.plugins({\n            undo: true,\n            keyboard_navigation: true,\n            fullscreen: true,\n            marker: true,\n    });\n    gantt.config.undo_steps = 5;\n    gantt.config.order_branch = true;\n}\n\nexport const initConfig = (gantt, editAllowed = false) => {\n    setZoomConfig(gantt);\n    setPlugins(gantt);\n    removeDefaultKeyShortcuts(gantt);\n    setColumns(gantt, editAllowed);\n    initGanttDateFormat(gantt);\n    initLightbox(gantt)\n    initLightboxButtons(gantt);\n    gantt.init(\"ganttDiv\");\n}\n","import React, { useEffect, useState } from 'react';\nimport {initConfig} from './gantt-config';\nimport {viewComponents} from './lightboxes';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { selectedTaskState, editable, undoStack, redoStack } from './store';\nimport {Zoom, Toolbar} from './controllers';\nimport {showTask, updateBranch, onTaskMove, dateToString, resetFolderCosts} from './utils';\n\nlet gantt;\n\nexport const Gantt = ({data, onSave}) => {\n    const [selectedTask, setSelectedTask] = useRecoilState(selectedTaskState);\n    const [undoStackLength, setUndoStack] = useRecoilState(undoStack);\n    const [redoStackLength, setRedoStack] = useRecoilState(redoStack);\n    const [initialized, setInitialized] = useState(false);\n    const [undoInit, setUndoInit] = useState(false);\n    const isEditable = useRecoilValue(editable);\n    // used to avoid re-handling already displayed tasks\n    const [lastShown, setLastShown] = useState(null);\n\n    // undo-redo\n    useEffect(() => {\n        window.gantt.attachEvent(\"onBeforeUndoStack\", function(action) {\n            if (!undoInit) {\n                const stack = window.gantt.getUndoStack();\n                setUndoStack(stack ? stack.length + 1 : 0);\n                setUndoInit(true);\n            }\n            return true;\n        });\n    }, [])\n\n\n    useEffect(() => {\n        window.gantt.ext.inlineEditors.attachEvent(\"onEditEnd\", function(state){\n           return true;\n        });\n    }, [])\n\n\n    // auto-schedule\n    useEffect(() => {\n            window.gantt.attachEvent(\"onBeforeTaskChanged\", (taskId, mode, initial) => {\n                onTaskMove(initial, window.gantt.getTask(taskId).start_date);\n                return true;\n            });\n    }, [])\n\n    useEffect(() => {\n        if (!data || !data.tasks || !data.tasks.length) return;\n\n        gantt = window.gantt;\n        gantt.clearAll();\n        initConfig(gantt, isEditable);\n        gantt.ext.zoom.setLevel(0);\n        gantt.config.date_format = \"%Y-%m-%d\";\n        window.gantt.parse(data);\n\n        gantt.addMarker({\n            start_date: new Date(),\n            css: \"today\",\n            title: dateToString(new Date()),\n            text: \"Today\"\n        });\n\n        resetFolderCosts();\n\n//        if (data && data.tasks && data.tasks.length) {\n//            Object.values(data.tasks).forEach(t => gantt.addTask(t, t.parent))\n//        }\n        gantt.attachEvent(\"onLightbox\", function(id) {\n               setSelectedTask(window.gantt.getTask(id));\n            })\n        gantt.attachEvent(\"onAfterLightbox\", function(id) {\n                setSelectedTask(null)\n            })\n        if (!initialized) setInitialized(true);\n    }, [data, setSelectedTask, setInitialized, isEditable]);\n\n    useEffect(() => {\n            if (initialized) {\n                if (selectedTask && selectedTask.index && (!lastShown || lastShown.index !== selectedTask.index)) {\n                    gantt.hideLightbox();\n                    setLastShown(selectedTask);\n                    showTask(selectedTask.index);\n                    gantt.$data.tasksStore.select(selectedTask.index);\n                    updateBranch(selectedTask, (task) => {\n                            if(task.isFolder) {\n                                const newTask = {...task, $open: true};\n                                window.gantt.updateTask(task.id, newTask);\n                            }\n                        })\n                    window.gantt.showLightbox(selectedTask.id);\n                }\n            }\n        }, [initialized, selectedTask, lastShown])\n\n     return <>\n        <Toolbar />\n        <div id=\"ganttDiv\"></div>\n        {selectedTask ? viewComponents.map((Component, idx)=> <Component task={selectedTask} key={selectedTask.id + idx.toString()} selectTask={setSelectedTask}/>) : null}\n        <Zoom className='zoom-controller'/>\n     </>\n}\n\nexport default Gantt;","import ReactDOM from 'react-dom';\nimport React from 'react';\n\nexport const portal = (Component, elementId) => (props) => {\n    const element = document.getElementById(elementId);\n    return element ? ReactDOM.createPortal(<Component {...props}/>, element) : null;\n}","import React from 'react';\nimport { Progress } from 'antd';\n\nconst ProgressDetails = ({task, className = ''}) => {\n    const progress = task.progress ? (task.progress * 100).toFixed(2) : 0;\n\n    return <div className={className}>\n                <Progress type=\"circle\" percent={progress} width={80}/>\n           </div>\n}\n\nexport default ProgressDetails;","import React, {useState, useCallback} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen, faCheck } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from 'antd';\n\nexport const useEdit = (onSave) => {\n    const editIcon = <FontAwesomeIcon icon={faPen} className='edit-icon'/>\n    const saveIcon = <FontAwesomeIcon icon={faCheck} className='edit-icon'/>\n    const [editing, setEditing] = useState(false);\n    const [icon, setIcon] = useState(editIcon);\n\n    const onClick = useCallback(() => {\n        if (editing && onSave) {\n            onSave();\n        }\n\n        setEditing(!editing);\n        setIcon(editing ? editIcon : saveIcon)\n    }, [editIcon, saveIcon, editing, onSave]);\n\n        const enterKeyHandle = useCallback((e) => {\n             if (e.key === 'Enter') {\n                onClick()\n                e.preventDefault();\n                e.stopPropagation();\n\n                document.removeEventListener('keypress', enterKeyHandle);\n             }\n        }, [onClick]);\n\n    const getElement = ({className = ''}) => <Button className={`edit-button ${className}`} size='small' onClick={onClick}>{icon}</Button>\n    return [editing, getElement];\n    }","import { atom } from 'recoil';\n\nexport const selectedTaskState = atom({\n  key: 'selectedTask',\n  default: null,\n});\n\nexport const editable = atom({\n  key: 'editable',\n  default: false,\n});\n\nexport const undoStack = atom({\n  key: 'undoStack',\n  default: 0,\n});\n\nexport const redoStack = atom({\n  key: 'redoStack',\n  default: 0,\n});","import React, {useState, useRef, useEffect, forwardRef} from 'react';\nimport { InputNumber } from 'antd';\nimport {useEdit} from '../hooks';\nimport { selectedTaskState } from '../../store'\nimport { useRecoilState } from 'recoil';\nimport { formatFloat } from '../../utils';\n\nconst noop = () => {};\nconst DIFF_PERCENT_THRESHOLD = 15;\n\nconst CostEdit = forwardRef(({title, value = 0, onChange, className = ''}, ref) => {\n    return <div className={`cost-edit ${className}`}>\n            <span className='cost-edit-title'>{title}</span>\n            <InputNumber\n                  ref={ref}\n                  min={0}\n                  value={parseFloat(value) ? value : ''}\n                  formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n                  parser={value => value.replace(/\\$\\s?|(,*)/g, '')}\n                  onChange={onChange}\n                />\n            </div>\n})\n\nconst DisplayCost = ({value = 0, actualCost, title, showIfEmpty = false, className = '' }) => {\n\n    if (typeof actualCost === 'number') {\n        const diff = parseFloat(actualCost) - parseFloat(value);\n        const percentage = parseFloat(value) === 0 || parseFloat(actualCost) === 0 || !parseFloat(diff) ? 0 : ((parseFloat(diff) / parseFloat(value)) * 100).toFixed(2);\n        let deviation = Math.abs(percentage) > DIFF_PERCENT_THRESHOLD ? (diff < 0 ? 'positive' : 'negative') : 'neutral';\n\n        if (parseFloat(value) === 0 && parseFloat(actualCost) !== 0) {\n            deviation = 'negative';\n        }\n\n        if (parseFloat(actualCost) === 0 && parseFloat(value) !== 0) {\n                    deviation = 'positive';\n                }\n\n        const sign = diff >= 0 ? '+' : '-';\n\n        return (\n             <div className={`cost-display ${className}`}>\n                <span className='cost-edit-title'>{title}</span>\n                <span className='display-cost'>\n                    <span className='cost-compare'>{`$ ${formatFloat(value || 0)}`}</span>\n                    <span className={'cost-compare ' + deviation}>{`$ ${formatFloat(actualCost || 0)}`}</span>\n                    <span className={'percentage ' + deviation}>{`${parseFloat(percentage) ? sign + Math.abs(percentage) + '%' : ''}`}</span>\n                </span>\n             </div>)\n    }\n     return (\n     <div className={`cost-display ${className}`}>\n        <span className='cost-edit-title'>{title}</span>\n        <span className='display-cost'>{`$ ${formatFloat(value || 0)}`}</span>\n     </div>)\n}\n\nconst EditableCost = ({value, title, onChange = noop, actualCost, className = ''}) => {\n    const [cost, setCost] = useState(value);\n    const [selectedTask, selectTask] = useRecoilState(selectedTaskState);\n    const [editing, EditSwitch] = useEdit(() => {\n        onChange(cost);\n        selectTask({...window.gantt.getTask(selectedTask.index)})\n        });\n\n    const inputRef = useRef();\n    useEffect(() => { // focus input on editing\n        if (editing && inputRef.current) {\n           inputRef.current.focus();\n        }\n    }, [editing, inputRef])\n\n    useEffect(() => () => { // save on close\n        if (editing && !selectedTask) {\n            console.log('inputref', inputRef)\n            onChange(cost);\n        }\n    }, [cost, editing, onChange, selectedTask])\n\n    return editing ? (\n    <div className='edit-cost'>\n        <CostEdit value={cost} title={title} onChange={setCost} ref={inputRef}/>\n        <EditSwitch className='cost-edit-switch'/>\n    </div>) :\n    (<div className='edit-cost'>\n        <DisplayCost value={value} title={title} showIfEmpty actualCost={actualCost}/>\n        <EditSwitch className='cost-edit-switch' />\n        </div>)\n}\n\nconst Cost = ({value, title, onChange = noop, className = '', editable = false, actualCost}) => {\n    return editable ? <EditableCost value={value} actualCost={actualCost} title={title} onChange={onChange} className={className}/> : <DisplayCost value={value} title={title} className={className} actualCost={actualCost}/>\n}\n\nexport default Cost","import React from 'react';\nimport {avg, updateBranch, aggregateTaskCostFields, costUpdaters} from '../../utils';\nimport Cost from './cost-edit';\nimport { useRecoilValue } from 'recoil';\nimport { editable } from '../../store'\n\nconst onOfficialFeeUpdate = (initialTask, updatedCost) => {\n    const diff = updatedCost - initialTask.officialFee;\n    updateBranch(initialTask, (task) => {\n        const updatedCost = parseFloat(task.officialFee) + parseFloat(diff);\n        const newTask = {...task,\n            officialFee: updatedCost,\n            official_fee: updatedCost,\n        }\n        window.gantt.updateTask(task.id, newTask);\n    });\n}\n\nconst onAttorneyFeeUpdate = (initialTask, updatedCost) => {\n    const diff = updatedCost - avg(initialTask.minCost, initialTask.maxCost);\n    updateBranch(initialTask, (task) => {\n        const updatedMinCost = parseFloat(task.minCost) + parseFloat(diff);\n        const updatedMaxCost = parseFloat(task.maxCost) + parseFloat(diff);\n\n        const newTask = {...task,\n            minCost: updatedMinCost,\n            min_attorney_fee: updatedMinCost,\n            maxCost: updatedMaxCost,\n            max_attorney_fee: updatedMaxCost\n        }\n        window.gantt.updateTask(task.id, newTask);\n    });\n}\n\nconst getFieldUpdater = (field) => (initialTask, updatedCost) => {\n    const initialCost = initialTask[field] || 0;\n    const diff = updatedCost - initialCost;\n        updateBranch(initialTask, (task) => {\n            const initialTaskCost = task[field] || 0;\n            const updatedCost = parseFloat(initialTaskCost) + parseFloat(diff);\n            const newTask = {...task,\n                [field]: updatedCost,\n            }\n            window.gantt.updateTask(task.id, newTask);\n        });\n    }\n\nconst CostsTitle = ({editable}) => {\n    return <div className={'cost-titles ' + (editable ? 'editable-cost-titles' : '')}>\n        <span className='cost-category'>Estimated</span>\n        <span className='cost-category'>Actual</span>\n        <span className='cost-category'>Difference</span>\n    </div>\n}\n\nconst costFields = {\n    attorneyFee: 0,\n    officialFee: 0,\n    associateFee: 0,\n    unidentifiedFee: 0,\n    brokerageFee: 0,\n}\n\nconst CostComponent = ({task, className = ''}) => {\n    const attorneyFee = avg(task.minCost || 0, task.maxCost || 0) || 0;\n    const officialFee = task.officialFee;\n    const total = parseFloat(attorneyFee) + parseFloat(aggregateTaskCostFields(task));\n    const isEditable = useRecoilValue(editable) && !task.isFolder;\n    const actualCost = task.actualCost ? {...costFields, ...task.actualCost} : {};\n    const actualSum = task.actualCost ? Object.values(actualCost).reduce((sum, cost) => sum + cost, 0) : null;\n    return <div className={`price-details ${className}`}>\n                {task.actualCost ? <CostsTitle editable={isEditable} /> : null}\n               <Cost title=\"Attorney Fee\" value={attorneyFee} actualCost={actualCost.attorneyFee} editable={isEditable} onChange={costUpdaters.attorneyFee.bind(null, task)}/>\n               <Cost title=\"Official Fee\" value={officialFee} actualCost={actualCost.officialFee} onChange={costUpdaters.officialFee.bind(null, task)} editable={isEditable}/>\n               <Cost title=\"Associate Fee\" value={task.associateFee} actualCost={actualCost.associateFee} onChange={costUpdaters.associateFee.bind(null, task)} editable={isEditable}/>\n               <Cost title=\"Unidentified Fee\" value={task.unidentifiedFee} actualCost={actualCost.unidentifiedFee} onChange={costUpdaters.unidentifiedFee.bind(null, task)} editable={isEditable}/>\n               <Cost title=\"Brokerage Fee\" value={task.brokerageFee} actualCost={actualCost.brokerageFee} onChange={costUpdaters.brokerageFee.bind(null, task)} editable={isEditable}/>\n               <Cost title=\"Total\" value={total} actualCost={actualSum} editable={false} className={'total-cost ' + (isEditable && task.actualCost ? 'edit' : '')}/>\n           </div>\n}\n\nexport default CostComponent;","import React from 'react';\nimport {getParents, showTask} from '../../utils';\nimport { Breadcrumb, Button } from 'antd';\nimport { useRecoilState } from 'recoil';\nimport { selectedTaskState } from '../../store'\n\nconst Parents = ({className = ''}) => {\n    const [selectedTask, selectTask] = useRecoilState(selectedTaskState)\n    const parents = getParents(selectedTask);\n    const onTaskClick = (task) => {\n        window.gantt.hideLightbox();\n        showTask(task.index);\n        window.gantt.showLightbox(task.id);\n        selectTask(task);\n    };\n\n    return <Breadcrumb className={className}>\n            {parents.map((task) =>\n                <Breadcrumb.Item key={task.index.toString()}>\n                    <Button className='breadcrumb-button' key={task.index.toString()} type=\"link\" onClick={onTaskClick.bind(null, task)}>\n                        {task.title}\n                    </Button>\n                </Breadcrumb.Item>)\n            }\n           </Breadcrumb>\n}\n\nexport default Parents;","import React, {useState, useRef, useEffect} from 'react';\nimport {useEdit} from '../hooks';\nimport { Input } from 'antd';\nimport { selectedTaskState, editable } from '../../store'\nimport { useSetRecoilState, useRecoilValue } from 'recoil';\n\nconst DisplayTitle = ({task}) => <div className='summary-title'>{task.text}</div>\n\nconst EditableTitle = ({task, className = ''}) => {\n    const selectTask = useSetRecoilState(selectedTaskState);\n    const inputRef = useRef();\n    const [value, setValue] = useState(task.title);\n    const onChange = ({target}) => setValue(target.value);\n    const onSave = () => {\n        const newTask = {...task, title: value, text: value};\n        window.gantt.updateTask(task.id, newTask);\n        selectTask(newTask)\n    }\n\n    const [editing, Switch] = useEdit(onSave);\n\n    useEffect(() => {\n        if  (editing && inputRef.current) {\n            inputRef.current.focus();\n        }\n    }, [editing, inputRef])\n\n    return !editing ? (\n        <div className={`title-edit ${className}`}>\n            <DisplayTitle task={task} />\n            <Switch />\n        </div>) : (\n        <div className={`title-edit ${className}`}>\n            <Input defaultValue={task.title} onChange={onChange} onPressEnter={()=>{}} className='title-input' ref={inputRef}/>\n            <Switch />\n        </div>)\n}\n\n\nconst Title = (props) => {\n    const isEditable = useRecoilValue(editable);\n    return isEditable ? <EditableTitle {...props} /> : <DisplayTitle {...props} />\n}\n\nexport default Title;","import React from 'react';\nimport {formatDuration} from '../../utils';\nimport Parents from './parents';\nimport Title from './editable-title'\n\nconst Summary = ({task, selectTask}) => {\n    return <div className='summary'>\n                <Parents task={task} selectTask={selectTask} className='parents-component'/>\n                <Title task={task}/>\n                <div>Duration: <span className='summary-duration'>{formatDuration(task.duration)}</span></div>\n           </div>\n}\n\nexport default Summary;","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faFlagCheckered } from '@fortawesome/free-solid-svg-icons';\nimport Title from './editable-title'\n\nconst MilestoneSummary = ({task, className = '', editable}) => {\n    const startDate = task && task.start_date && task.start_date.toUTCString ? task.start_date.toUTCString().split(' ').splice(0,4).join(' ') : null;\n    return <div className={className}>\n                <div className='title-line'>\n                    <FontAwesomeIcon icon={faFlagCheckered} className='milestone-icon'/>\n                    <Title className='milestone-title' task={task} />\n                </div>\n                <div className='milestone-date'>{startDate}</div>\n           </div>\n}\n\nexport default MilestoneSummary;","import React from 'react';\nimport {Button} from 'antd';\nimport {selectedTaskState} from '../../store';\nimport {useRecoilState} from 'recoil';\n\nconst CloseButton = ({className = ''}) => {\n    const [selected, setSelectedTask] = useRecoilState(selectedTaskState)\n    const onClose = () => {\n        const updated =  {...window.gantt.getTask(selected.id)};\n        updated.$source = [].concat(updated.$source);\n        updated.$target = [].concat(updated.$target);\n        window.gantt.updateTask(selected.id, updated);\n        window.gantt.hideLightbox();\n        setSelectedTask(null);\n    }\n    return <Button type='primary' className={`button close ${className}`} onClick={onClose}>Close</Button>\n}\n\nexport default CloseButton;","import React, {useCallback} from 'react';\nimport { deleteTask } from '../../utils';\nimport {Button} from 'antd';\n\nconst DeleteButton = ({id}) => {\n    const onDelete = () => {\n        window.gantt.confirm({\n            text: \"Are you sure?\",\n            ok:\"Delete\",\n            cancel:\"Cancel\",\n            callback: (confirmed) => {\n                if (confirmed) {\n                    window.gantt.hideLightbox();\n                    const task = window.gantt.getTask(id);\n                    deleteTask(id);\n                    window.gantt.message(`Task \\\"${task.title}\\\" deleted`);\n                }\n            }\n        });\n\n    }\n    return <Button onClick={onDelete} className='delete-button button' type=\"primary\" danger>Delete</Button>\n}\n\nexport default DeleteButton;","import Close from './closeButton';\nimport Delete from './deleteButton';\nimport Default from './defaultButtonsForLightbox.js';\n\nconst LightboxButtons = {\n    Close,\n    Delete,\n    Default,\n}\n\nexport default LightboxButtons;","import React from 'react';\nimport { editable } from '../../store';\nimport { useRecoilValue } from 'recoil';\nimport Close from './closeButton';\nimport Delete from './deleteButton';\n\nconst Default = ({id}) => {\n    const editAllowed = useRecoilValue(editable);\n    return editAllowed ? (\n        <div className='editable-buttons'>\n            <Delete id={id}/>\n            <Close />\n        </div>) : (\n        <div className='buttons'> <Close/> </div>)\n\n}\n\nexport default Default;","import TaskDetails from './taskDetails';\nimport FolderDetails from './folderDetails';\nimport MilestoneDetails from './milestoneDetails';\n\nexport const viewComponents = [TaskDetails, FolderDetails, MilestoneDetails];\n","import React from 'react';\nimport {portal} from '../hocs';\nimport {Progress, Cost, Summary} from './subComponents';\nimport Buttons from './buttons';\n\nconst TaskDetails = ({task}) => {\n    if (!task) return null;\n\n    return <div className='details-lightbox'>\n            <div className='details-collection'>\n                <Summary task={task} />\n                <Progress task={task} className='details-progress'/>\n            </div>\n            <Cost task={task} />\n            <div className='view-buttons-section'>\n                <Buttons.Default id={task.id}/>\n            </div>\n        </div>\n}\n\nexport default portal(TaskDetails, 'task-details')","import React from 'react';\nimport {portal} from '../hocs';\nimport {Progress, Cost, Summary} from './subComponents';\nimport Buttons from './buttons';\n\nconst FolderDetails = ({task, selectTask}) => {\n    if (!task) return null;\n\n    return <div className='details-lightbox'>\n            <div className='details-collection'>\n                <Summary task={task} selectTask={selectTask}/>\n                <Progress task={task} className='details-progress'/>\n            </div>\n            <Cost task={task} editable={false}/>\n\n            <div className='view-buttons-section'>\n                <Buttons.Default id={task.id}/>\n            </div>\n        </div>\n}\n\nexport default portal(FolderDetails, 'folder-details')","import React from 'react';\nimport {portal} from '../hocs';\nimport {Cost, MilestoneSummary} from './subComponents';\nimport Buttons from './buttons';\n\nconst TaskDetails = ({task = {}, selectTask}) => {\n    if (!task) return null;\n\n    return <div className='milestone-details-lightbox'>\n            <div className='details-collection'>\n                <MilestoneSummary task={task} className='milestone-summary'/>\n            </div>\n            <Cost task={task} />\n\n            <div className='view-buttons-section'>\n                <Buttons.Default id={task.id}/>\n            </div>\n        </div>\n}\n\nexport default portal(TaskDetails, 'milestone-details')","import React, {useState} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faMinus } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from 'antd';\n\nconst canZoomOut = () => {\n    const levelsCount = window.gantt.ext.zoom._levels.length;\n    const currentLevel = window.gantt.ext.zoom.getCurrentLevel();\n    return currentLevel + 1 < levelsCount\n}\n\nconst canZoomIn = () => {\n    return window.gantt.ext.zoom.getCurrentLevel() > 0;\n}\n\nconst Zoom = ({className = ''}) => {\n    const [zoomInAvailable, setZoomInAvailable] = useState(false);\n    const [zoomOutAvailable, setZoomOutAvailable] = useState(true);\n\n    const zoomIn = () => {\n        window.gantt.ext.zoom.zoomIn();\n        setZoomOutAvailable(canZoomOut());\n        setZoomInAvailable(canZoomIn());\n    }\n\n    const zoomOut = () => {\n        window.gantt.ext.zoom.zoomOut();\n        setZoomOutAvailable(canZoomOut());\n        setZoomInAvailable(canZoomIn());\n    }\n\n    return <div className={className} >\n                <Button type=\"primary\" disabled={!zoomInAvailable} className='zoom-button' onClick={zoomIn} icon={<FontAwesomeIcon icon={faPlus} className='zoom-in'/>} />\n                <Button type=\"primary\" disabled={!zoomOutAvailable} className='zoom-button' onClick={zoomOut} icon={<FontAwesomeIcon icon={faMinus} className='zoom-out'/>} />\n           </div>\n}\n\nexport default Zoom;","import React, {useState} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUndo, faRedo } from '@fortawesome/free-solid-svg-icons';\nimport { Button } from 'antd';\nimport { useRecoilState } from 'recoil';\nimport { undoStack, redoStack } from '../store';\n\nconst canUndo = () => {\n    var stack = window.gantt.getUndoStack();\n    return (stack.length > 0)\n}\n\nconst canRedo = () => {\n    var stack = window.gantt.getRedoStack();\n    return (stack.length > 0)\n}\n\nconst UndoRedo = ({className = ''}) => {\n    const [undoStackLength, setUndo] = useRecoilState(undoStack);\n    const [redoStackLength, setRedo]= useRecoilState(redoStack);\n\n    const undo = () => {\n        window.gantt.undo();\n        if(window.gantt.onUndo) window.gantt.onUndo();\n        setUndo(window.gantt.getUndoStack().length);\n        setRedo(window.gantt.getRedoStack().length);\n   }\n\n    const redo = () => {\n        window.gantt.redo();\n        if(window.gantt.onRedo) window.gantt.onRedo();\n        setRedo(window.gantt.getRedoStack().length);\n        setUndo(window.gantt.getUndoStack().length);\n  }\n\n    return <div className='undo-redo-button' >\n                <Button type=\"primary\" disabled={!undoStackLength} className='undo-redo-button' onClick={undo} icon={<FontAwesomeIcon icon={faUndo} className='undo'/>} />\n                <Button type=\"primary\" disabled={!redoStackLength} className='undo-redo-button' onClick={redo} icon={<FontAwesomeIcon icon={faRedo} className='redo'/>} />\n           </div>\n}\n\nexport default UndoRedo;","import React from 'react';\nimport { Switch } from 'antd';\nimport {defaultColumns, inlineEditColumns} from '../columns';\nimport {costUpdaters, onDurationChange, onTaskMove} from '../utils';\n\nlet editing = false;\n\nconst handleInlineEditing = (diff) => {\n    const task = {...window.gantt.getTask(diff.id), [diff.columnName]: diff.oldValue};\n    if (task.type === 'project') {\n        return\n    }\n\n    if (diff.columnName === 'text') {\n        const newTask = {\n            ...task,\n            title: diff.newValue, // backward compatibility\n            text: diff.newValue   // value gantt uses\n        }\n        window.gantt.updateTask(task.id, newTask);\n    }\n\n    if (costUpdaters[diff.columnName]) {\n        const updater = costUpdaters[diff.columnName];\n        const newValue = parseFloat(diff.newValue || 0);\n        updater(task, newValue);\n        return;\n    }\n\n    if (diff.columnName === 'duration') {\n        onDurationChange(task, parseFloat(diff.newValue || 0));\n        return;\n    }\n\n    if (diff.columnName === 'start_date') {\n       onTaskMove(task, diff.newValue)\n    }\n}\n\nconst subscribeToInlineEditing = () => {\n                    window.gantt.ext.inlineEditors.attachEvent(\"onSave\", (diff) => {\n                                                      editing = false;\n                                                      handleInlineEditing(diff);\n                                                       return true;\n                                                   });\n\n                   window.gantt.ext.inlineEditors.attachEvent(\"onEditEnd\", function(state){\n\n                        editing = false;\n                        return true;\n                    })\n\n                    window.gantt.ext.inlineEditors.attachEvent('onBeforeEditStart', (diff) => {\n                      const task = window.gantt.getTask(diff.id);\n                       if (editing) return false;\n                        else if (task.type === window.gantt.config.types.project && (diff.columnName !== 'text')) return false;\n                        editing = true;\n                        return true;\n                    })\n                }\n\nconst InlineEdit = () => {\n    const onChange = (checked) => {\n        if (checked) {\n            window.gantt.config.columns = inlineEditColumns;\n            setTimeout(subscribeToInlineEditing, 0);\n        }\n        else {\n            window.gantt.config.columns = defaultColumns;\n            window.gantt.ext.inlineEditors.detachAllEvents()\n        }\n\n        window.gantt.config.keyboard_navigation = checked;\n        window.gantt.config.keyboard_navigation_cells = checked;\n        window.gantt.resetLayout();\n    }\n\n    return <div className='toolbar-button'>\n                <div className='toolbar-button-title'>Inline Edit</div>\n                <Switch checkedChildren='On' unCheckedChildren='Off' onChange={onChange}/>\n            </div>\n}\n\nexport default InlineEdit;","import React from 'react';\nimport {Button} from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faExpandAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst FullScreen = () => {\n    const onClick = async () => {\n        const rootDiv = window.document.getElementById('snufkin');\n        console.log(rootDiv)\n\n        if (rootDiv.clientHeight >= window.innerHeight) {\n            try {\n                 await document.exitFullscreen()\n            } catch (e) {\n                rootDiv.requestFullscreen()\n            }\n        } else rootDiv.requestFullscreen()\n    };\n\n    return <div className='tooltip-button-wrapper'>\n                <Button onClick={onClick} className='tooltip-button'>\n                   <span className='tooltip-button-title'>Full Screen</span>\n                   <FontAwesomeIcon icon={faExpandAlt} className='expand'/>\n                </Button>\n           </div>\n}\n\nexport default FullScreen;","import React from 'react';\nimport { Spin, Button } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\n\nconst Spinner = ({className = '', size = 24 }) => {\n    return <Spin indicator={<LoadingOutlined spin style={{ fontSize: size }} />} className={`spinner ${className}`}/>\n}\n\nexport default Spinner;","import React, {useState} from 'react';\nimport {sendSaveGanttMessage} from '../utils';\nimport {Button} from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSave } from '@fortawesome/free-solid-svg-icons';\nimport Spinner from '../Spinner'\n\nconst Save = () => {\n    const [loading, setLoading] = useState(false);\n\n    const onClick = async () => {\n        try {\n            setLoading(true);\n            await window.gantt.onSave();\n        }\n        catch (e) {\n            console.warn(e);\n        }\n        setLoading(false);\n    }\n\n    if (loading) return <div className='tooltip-button-wrapper'><Spinner /></div>\n\n    return <div className='tooltip-button-wrapper'>\n                           <Button onClick={onClick} className='tooltip-button'>\n                              <span className='tooltip-button-title'>Save</span>\n                              <FontAwesomeIcon icon={faSave} className='expand'/>\n                           </Button>\n                      </div>\n}\n\nexport default Save;","import React from 'react';\nimport { editable } from '../store';\nimport { useRecoilValue } from 'recoil';\nimport Undo from './undo';\nimport InlineEdit from './inlineEdit';\nimport FullScreen from './fullScreen';\nimport Save from './save';\nimport RootDate from './rootDate';\n\nconst _Toolbar = (props) => {\n    const editAllowed = useRecoilValue(editable);\n    return editAllowed ? <Toolbar className='toolbar' {...props}/> : null\n}\n\nconst Toolbar = () => {\n    return <div className='toolbar'>\n        <Undo />\n        <InlineEdit />\n        <FullScreen />\n        <Save />\n    </div>\n}\n\nexport default _Toolbar;","import React, { useState, useEffect } from 'react';\nimport Gantt from './gantt';\nimport {sendMsg} from './connection-utils';\nimport './App.scss';\nimport { RecoilRoot } from 'recoil';\nimport {data2 as mock, receipts as receiptsMock} from './mock-data';\nimport {sendSaveGanttMessage, updateTaskCostsFromReceipts} from './utils';\nimport {editable as _editable, selectedTaskState} from './store';\nimport {useSetRecoilState} from 'recoil';\n\nconst clearEditHistory = () => {\n    window.gantt.clearUndoStack();\n    window.gantt.clearRedoStack();\n}\n\nconst noop = () => {};\n\nconst Snufkin = ({tasks, links, selectedTask, receipts, editable = false, onSave = noop, onUndo = noop, onRedo = noop}) => {\n    const [data, setData] = useState({tasks: [], links: []});\n    const [receiptAssignments, setAssignments] = useState({});\n\n    const setEditPermissions = useSetRecoilState(_editable);\n    const setSelectedTask = useSetRecoilState(selectedTaskState);\n\n    useEffect(() => {\n        if (!tasks) { // not controlled version\n            window.onmessage = (event) => {\n                    let data = event.data;\n                    try {\n                        data = JSON.parse(event.data);\n                    } catch(e) {\n                        console.log(\"can't parse data: \" + event.data);\n                    }\n                    if (data.type === 'data') {\n                       console.log('got data');\n                       setData(data.data);\n                       setEditPermissions(data.editable || false)\n                       clearEditHistory();\n                       sendMsg('done')\n                    }\n\n                    if (data.type === 'receipts') {\n                        const assignments = data.payload.assignments;\n                        setAssignments(assignments)\n                    }\n\n                    if (data.type === 'getSnapshot') {\n                        sendSaveGanttMessage();\n                    }\n            }\n        }\n    //    if (window.location.pathname.split('/').includes('test')) {\n    //                setEditPermissions(true);\n    //                setData(mock);\n    //                setAssignments(receiptsMock.assignments);\n    //    }\n    console.log('ver 0.0.11');\n    }, [setEditPermissions]);\n\n    useEffect(() => {\n        if (tasks && links) {\n            setData({tasks, links})\n        }\n    }, [tasks, links])\n\n    useEffect(() => {\n        setSelectedTask(selectedTask);\n    }, [selectedTask])\n\n    useEffect(() => {\n        updateTaskCostsFromReceipts(receiptAssignments);\n    }, [receiptAssignments, tasks, data])\n\n    useEffect(() => {\n        if (receipts && receipts.assignments) setAssignments(receipts.assignments)\n    }, [receipts])\n\n    useEffect(() => {\n        if (tasks) {\n            setEditPermissions(editable);\n            window.gantt.onSave = onSave;\n            window.gantt.onUndo = onUndo;\n            window.gantt.onRedo = onRedo;\n        }\n    }, [editable, tasks, onSave])\n\n\n     return (\n     <>\n        <div className='snufkin' id='snufkin'>\n            <div className=\"gantt-container\">\n                <Gantt data={data}/>\n            </div>\n        </div>\n    </>\n     );\n    }\n\nexport default (props) => <RecoilRoot><Snufkin {...props} /></RecoilRoot>\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}